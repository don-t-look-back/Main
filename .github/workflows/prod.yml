name: AWS ECR push & deploy k8s

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: 891377021190.dkr.ecr.ap-northeast-2.amazonaws.com
      API_REPOSITORY: main-api
      DB_REPOSITORY: main-db
      IMAGE_TAG: latest
      AWS_REGION: ap-northeast-2
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build with Gradle
        run: ./gradlew clean build # 프로젝트 빌드
        shell: bash

      - name: Build API Docker image
        run: docker build --file Dockerfile-api --platform linux/amd64 -t ${DOCKER_HUB_USERNAME}/dlb-main:latest .

      - name: Push API Docker image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker push ${DOCKER_HUB_USERNAME}/dlb-main:latest

      - name: Tag and Push API Docker image to Amazon ECR
        run: |
          docker tag ${DOCKER_HUB_USERNAME}/dlb-main:latest ${ECR_REGISTRY}/${API_REPOSITORY}:${IMAGE_TAG}
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
          docker push ${ECR_REGISTRY}/${API_REPOSITORY}:${IMAGE_TAG}

      - name: Build DB Docker image
        run: docker build --file Dockerfile-db --platform linux/amd64 -t ${DOCKER_HUB_USERNAME}/dlb-main-db:latest .

      - name: Push DB Docker image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker push ${DOCKER_HUB_USERNAME}/dlb-main-db:latest

      - name: Tag and Push DB Docker image to Amazon ECR
        run: |
          docker tag ${DOCKER_HUB_USERNAME}/dlb-main-db:latest ${ECR_REGISTRY}/${DB_REPOSITORY}:${IMAGE_TAG}
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
          docker push ${ECR_REGISTRY}/${DB_REPOSITORY}:${IMAGE_TAG}

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name DlbEks

      - name: Create Kubernetes Secret
        run: |
          kubectl create secret generic mysql-secret \
            --from-literal=MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} \
            --from-literal=MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} \
            --from-literal=MYSQL_USER=${{ secrets.MYSQL_USER }} \
            --from-literal=MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
            --namespace main-namespace \
            --dry-run=client -o yaml | kubectl apply --validate=false -f -

      - name: Update Kubernetes deployment
        run: |
          kubectl apply -f k8s/main-api-deployment.yaml
          kubectl apply -f k8s/mysql-deployment.yaml
