
name: AWS ECR push & deploy k8s

on:
  workflow_dispatch:
  push:
    branches:
      - main


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: 891377021190.dkr.ecr.ap-northeast-2.amazonaws.com
      ECR_REPOSITORY: main-api
      DB_REPOSITORY: main-db
      IMAGE_TAG: latest
      AWS_REGION: ap-northeast-2
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'  # 배포 설정 추가
          java-version: '17'

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and push API Docker image to Amazon ECR
        run: |
          docker buildx create --use
          docker buildx build --file Dockerfile-api --platform linux/amd64 -t ${ECR_REGISTRY}/${API_REPOSITORY}:${IMAGE_TAG} --push .

      - name: Build and push DB Docker image to Amazon ECR
        run: |
          docker buildx create --use
          docker buildx build --file Dockerfile-db --platform linux/amd64 -t ${ECR_REGISTRY}/${DB_REPOSITORY}:${IMAGE_TAG} --push .

      - name: Log in to Amazon ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ env.AWS_REGION }}
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

      - name: Pull Docker image from Docker Hub and push to Amazon ECR
        run: |
          docker pull ${DOCKER_HUB_USERNAME}/dlb-main:${IMAGE_TAG}
          docker tag ${DOCKER_HUB_USERNAME}/dlb-main:${IMAGE_TAG} ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
          docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name DlbEks

      - name: Create Kubernetes Secret
        run: |
          kubectl create secret generic mysql-secret \
            --from-literal=MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} \
            --from-literal=MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} \
            --from-literal=MYSQL_USER=${{ secrets.MYSQL_USER }} \
            --from-literal=MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
            --namespace main-namespace \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Update Kubernetes deployment
        run: |
          kubectl apply -f k8s/main-api-deployment.yaml
          kubectl apply -f k8s/main-db-deployment.yaml

